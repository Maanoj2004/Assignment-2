#include <stdio.h>
#include <limits.h>

int minJumps(int arr[], int n) {
    if (n <= 1) return 0; // Already at the end or only 1 element in array

    int jumps = 1; // Minimum jumps required to reach end from start
    int farthest = arr[0]; // Farthest index that can be reached from start
    int currEnd = arr[0]; // Current end point of jump

    for (int i = 1; i < n; i++) {
        if (i == n - 1) return jumps; // Reached the end of array

        farthest = (farthest > i + arr[i]) ? farthest : i + arr[i]; // Update farthest index

        if (i == currEnd) { // Need to make another jump
            jumps++;
            currEnd = farthest; // Update current end point of jump
            if (currEnd <= i) return -1; // End point not reachable
        }
    }

    return -1; // End point not reachable
}

int main() {
    int arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
    int n = sizeof(arr)/sizeof(arr[0]);
    int minJumpsRequired = minJumps(arr, n);
    if (minJumpsRequired == -1) {
        printf("End point is not reachable");
    } else {
        printf("Minimum number of jumps required = %d", minJumpsRequired);
    }
    return 0;
}
